# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test Automation

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  unix_builds:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest]
        python-version: [ '3.10', '3.11', '3.12' ]
        include:
          - os: ubuntu-latest
            pip-cache: ~/.cache/pip
            poetry-cache: ~/.cache/pypoetry
          - os: macos-latest
            pip-cache: ~/Library/Caches/pip
            poetry-cache: ~/Library/Caches/pypoetry

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov pyxdg
        pip list
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest tests/check_browsers.py --cov-report xml:coverage.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  windows_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        python-version: [ '3.10', '3.11', '3.12' ]
        include:
          - os: windows-latest
            pip-cache: ~\AppData\Local\pip\Cache
            poetry-cache: ~\AppData\Local\pypoetry\Cache
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov pyxdg pywin32 pywin32-ctypes
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=127 --statistics
    - name: Test
      run: |
        python -m pytest tests/check_browsers.py --cov-report xml:coverage.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5.5.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
